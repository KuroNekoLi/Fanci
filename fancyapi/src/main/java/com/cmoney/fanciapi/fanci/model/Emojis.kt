/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.cmoney.fanciapi.fanci.model


import com.squareup.moshi.Json

/**
 * 
 *
 * Values: like,dislike,laugh,money,shock,cry,think,angry
 */

enum class Emojis(val value: kotlin.String) {

    @Json(name = "Like")
    like("Like"),

    @Json(name = "Dislike")
    dislike("Dislike"),

    @Json(name = "Laugh")
    laugh("Laugh"),

    @Json(name = "Money")
    money("Money"),

    @Json(name = "Shock")
    shock("Shock"),

    @Json(name = "Cry")
    cry("Cry"),

    @Json(name = "Think")
    think("Think"),

    @Json(name = "Angry")
    angry("Angry");

    /**
     * Override toString() to avoid using the enum variable name as the value, and instead use
     * the actual value defined in the API spec file.
     *
     * This solves a problem when the variable name and its value are different, and ensures that
     * the client sends the correct enum values to the server always.
     */
    override fun toString(): String = value

    companion object {
        /**
         * Converts the provided [data] to a [String] on success, null otherwise.
         */
        fun encode(data: kotlin.Any?): kotlin.String? = if (data is Emojis) "$data" else null

        /**
         * Returns a valid [Emojis] for [data], null otherwise.
         */
        fun decode(data: kotlin.Any?): Emojis? = data?.let {
          val normalizedData = "$it".lowercase()
          values().firstOrNull { value ->
            it == value || normalizedData == "$value".lowercase()
          }
        }
    }
}

